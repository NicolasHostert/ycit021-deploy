# This is a basic workflow to help you get started with Actions

name: Deploy all the things

on:
  workflow_dispatch:

env:
  TEST_TAG: moonwalkers/terraform:runnow # Image tag. The image is discarded after the 
  GKE_CLUSTER: gke-ycit021-devops-project
  GKE_ZONE: us-central1
  GKE_PROJECT: ${{ secrets.GKE_PROJECT_DEV }}

jobs:
  # Linting of all the blocks used to build the infra
  pre-flight:
    runs-on: ubuntu-latest
    steps:
      # Docker checkout and lint on the local Docker file used to configure the Moonwalkers image to the individual specifics
      - name: Checkout Deploy repo
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Docker Lint
        uses: luke142367/Docker-Lint-Action@v1.1.1
        with:
          target: Dockerfile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Checkout and lint on the Moonwalkers gcp-infra repo used to build the infra
      - name: Checkout Terraform repo
        uses: actions/checkout@v2
        with:
          repository: devops-moonwalkers/gcp-infra
      - name: Terraform Lint
        uses: actionshub/terraform-lint@main

  # Deployment of the dev part
  dev-infra:
    runs-on: ubuntu-latest
    needs: pre-flight 
    environment:
      name: dev
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          load: true
          tags: ${{ env.TEST_TAG }}
          secrets: |
            "TERRAFORM_TOKEN=${{ secrets.TERRAFORM_TOKEN }}"
            "GCP_CREDENTIAL=${{ secrets.GCP_CREDENTIAL }}"
            "BUCKET=${{ secrets.BUCKET_DEV }}"
            "TFVARS=${{ secrets.TFVARS_DEV }}"
      -
        name: Run the image
        run: |
          docker run --rm ${{ env.TEST_TAG }}

  # Deploy myapp from repo to dev infra
  dev-application:
    needs: dev-infra 
    runs-on: ubuntu-latest
    steps:
      - name: Auth GCP 
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCP_AUTH_DEV }}

      - name: Checkout myapp repo
        uses: actions/checkout@v2
        with:
          repository: NicolasHostert/ycit021-myapp

      - name: Deploy
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_ZONE
          helm upgrade --install myapp . --values values-cloud.yaml
          sleep 60
          kubectl get services -o wide
          export SERVICE_IP=$(kubectl get svc --namespace default ycit021-myapp --template "{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}")
          echo Deployment completed successfully!
          echo To access the app: http://$SERVICE_IP:80
          echo "SERVICE=$SERVICE_IP" >> $GITHUB_ENV

      - name: Check the deployed service URL
        uses: jtalk/url-health-check-action@v2
        with:
          url: http://${{ env.SERVICE }}"

  # Deployment of the prod part
  prod-infra:
    runs-on: ubuntu-latest
    needs: pre-flight 
    environment:
      name: prod
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          load: true
          tags: ${{ env.TEST_TAG }}
          secrets: |
            "TERRAFORM_TOKEN=${{ secrets.TERRAFORM_TOKEN }}"
            "GCP_CREDENTIAL=${{ secrets.GCP_CREDENTIAL_PROD }}"
            "BUCKET=${{ secrets.BUCKET_PROD }}"
            "TFVARS=${{ secrets.TFVARS_PROD }}"

      - name: Run the image
        run: |
          docker run --rm ${{ env.TEST_TAG }}

  # Deploy myapp from repo to prod infra
  prod-application:
    needs: prod-infra 
    runs-on: ubuntu-latest
    steps:
      - name: Auth GCP 
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCP_AUTH_PROD }}

      - name: Checkout myapp repo
        uses: actions/checkout@v2
        with:
          repository: NicolasHostert/ycit021-myapp

      - name: Deploy
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_ZONE
          helm upgrade --install myapp . --values values-cloud.yaml
          sleep 60
          kubectl get services -o wide
          export SERVICE_IP=$(kubectl get svc --namespace default ycit021-myapp --template "{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}")
          echo Deployment completed successfully!
          echo To access the app: http://$SERVICE_IP:80