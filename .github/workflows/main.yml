# This is a basic workflow to help you get started with Actions

name: Infrastructure


on:
#  push:
#    branches:
#      - main
  workflow_dispatch:

# Image tag. The image is discarded
env:
  TEST_TAG: moonwalkers/terraform:runnow
  GKE_CLUSTER: gke-ycit021-project-dev
  GKE_ZONE: us-central1
  GKE_PROJECT: ${{ secrets.GKE_PROJECT_DEV }}

jobs:
#  pre-flight:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          ref: main
#      - name: Docker Lint
#        uses: luke142367/Docker-Lint-Action@v1.1.1
#        with:
#          target: Dockerfile
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dev-infra:
    runs-on: ubuntu-latest
#    needs: pre-flight 
    environment:
      name: dev
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          load: true
          tags: ${{ env.TEST_TAG }}
          secrets: |
            "TERRAFORM_TOKEN=${{ secrets.TERRAFORM_TOKEN }}"
            "GCP_CREDENTIAL=${{ secrets.GCP_CREDENTIAL }}"
            "BUCKET=${{ secrets.BUCKET_DEV }}"
            "TFVARS=${{ secrets.TFVARS_DEV }}"
      -
        name: Run the image
        run: |
          docker run --rm ${{ env.TEST_TAG }}

  dev-application:
    needs: dev-infra 
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      # Setup gcloud CLI
      - name: Auth GCP 
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCP_AUTH_DEV }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0

      - name: Use gcloud CLI
        run: gcloud info

#      - uses: google-github-actions/setup-gcloud@master
#        with:
#          version: '270.0.0'
#          service_account_email: ${{ secrets.GCP_SERVICEACCOUNTEMAIL_DEV }}
#          service_account_key: ${{ secrets.GKE_KEY_DEV }}
#
#        # Get the GKE credentials so we can deploy to the cluster
#      - name: Get cluster credentials
#        uses: google-github-actions/get-gke-credentials@v0.4.0
#        with:
#          cluster_name: ${{ env.GKE_CLUSTER }}
#          location: ${{ env.GKE_ZONE }}
#          credentials: ${{ secrets.GKE_KEY_DEV }}
#
#
#          # Configure docker to use the gcloud command-line tool as a credential helper
#      - name: Configure auth
#        run: 
#          gcloud auth configure-docker
#
#      # Install helm
#      - name: Install Helm
#        run: |
#          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
#
#
#      - name: Deploy
#        run: |
#          gcloud container clusters get-credentials $GKE_CLUSTER \
#            --zone $GKE_ZONE \
#            --project $GKE_PROJECT
#          helm upgrade $GKE_PROJECT $GKE_PROJECT-cluster/ \
#            --set randocats.image.tag=$GITHUB_SHA \
#            --wait
#          kubectl rollout status deployment/$DEPLOYMENT_NAME
#          kubectl get services -o wide



  prod:
    runs-on: ubuntu-latest
#    needs: pre-flight 
    environment:
      name: prod
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          load: true
          tags: ${{ env.TEST_TAG }}
          secrets: |
            "TERRAFORM_TOKEN=${{ secrets.TERRAFORM_TOKEN }}"
            "GCP_CREDENTIAL=${{ secrets.GCP_CREDENTIAL_PROD }}"
            "BUCKET=${{ secrets.BUCKET_PROD }}"
            "TFVARS=${{ secrets.TFVARS_PROD }}"


      - name: Run the image
        run: |
          docker run --rm ${{ env.TEST_TAG }}